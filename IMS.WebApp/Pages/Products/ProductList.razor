@page "/products"

@inject IViewProductsByNameUseCase ViewProductsByNameUseCase
@inject NavigationManager NavigationManager

<h3>ProductList</h3>
<br/>

<ViewProductsComponent OnSearchProducts="OnSearchProducts"></ViewProductsComponent>

@if (_productsList != null)
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
        </thead>

        <tbody>
        @foreach (var product in this._productsList)
        {
            <ProductItemComponent Product="product" OnProductDeleted="DeleteProduct"></ProductItemComponent>
        }
        </tbody>
    </table>
}
<br/>
<button type="button" class="btn btn-outline-primary" @onclick="AddProduct">Add Product</button>

@code {
    private List<Product>? _productsList;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private void OnSearchProducts(List<Product> products)
    {
        _productsList = products;
    }

    private void AddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }

    private async Task DeleteProduct()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        var pro = await ViewProductsByNameUseCase.ExecuteAsync();
        _productsList = pro;
    }

}