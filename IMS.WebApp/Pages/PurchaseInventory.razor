@page "/purchase"
@using IMS.WebApp.ViewModels
@using Humanizer.DateTimeHumanizeStrategy
@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase
<h3>
    Purchase Inventory
</h3>

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="po">Purchase Order</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"> </InputText>
        </div>

        <div class="form-group">
            <label for="inv">Inventory to Purchase</label>
            <ViewInventoriesComponent
                DisplaySearchResult="true"
                OnSelectInventory="OnSelectInventory">
            </ViewInventoriesComponent>
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
            <input type="hidden" value="@purchaseViewModel?.InventoryId"/>
            @if (selectedInventory != null)
            {
                <test>Price:</test>
                @selectedInventory?.Price.ToString("c")
                ;
            }
        </div>

        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"/>
        </div>
        <br/>
        <button type="submit" class="btn btn-outline-primary">Purchase</button>
    </EditForm>
}



@code {

    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();

    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Fank"
            );
        //this.purchaseViewModel = new PurchaseViewModel();
        //this.selectedInventory = null;
    }

}